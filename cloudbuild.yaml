# cloudbuild.yaml
options:
  logging: CLOUD_LOGGING_ONLY

substitutions:
  _REGION: us-west1
  _SERVICE: podcast-web-524304361363
  _AR_REPO: cloud-run
  _MEDIA_ROOT: /tmp
  _SHORT_SHA: 'local'

images:
  - '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_AR_REPO}/${_SERVICE}:$_SHORT_SHA'
  - '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_AR_REPO}/${_SERVICE}:latest'

steps:
  # Build container image
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - build
      - -t
      - '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_AR_REPO}/${_SERVICE}:$_SHORT_SHA'
      - -t
      - '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_AR_REPO}/${_SERVICE}:latest'
      - .

  # Push image with SHA tag
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - push
      - '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_AR_REPO}/${_SERVICE}:$_SHORT_SHA'

  # Push image with latest tag
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - push
      - '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_AR_REPO}/${_SERVICE}:latest'

  # Seed the database
  # (removed) database seeding step to avoid side-effects during deploys

  # Deploy to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:slim'
    entrypoint: gcloud
    args:
      - run
      - deploy
      - '${_SERVICE}'
      - '--image=${_REGION}-docker.pkg.dev/$PROJECT_ID/${_AR_REPO}/${_SERVICE}:$_SHORT_SHA'
      - '--region=${_REGION}'
      - '--platform=managed'
      - '--set-env-vars=ADMIN_EMAIL=scott@scottgerhardt.com,MEDIA_ROOT=${_MEDIA_ROOT}'
  # NOTE: secrets removed from this Cloud Build deploy step to avoid requiring secret access here

# availableSecrets removed (no secret references in this build config)
