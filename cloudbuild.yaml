options:
  logging: CLOUD_LOGGING_ONLY

substitutions:
  _REGION: us-west1
  _AR_REPO: cloud-run

  # API
  _SERVICE: podcast-api
  _MEDIA_ROOT: /tmp

  # WEB
  _WEB_SERVICE: podcast-web
  _VITE_GOOGLE_CLIENT_ID: ''
  _VITE_API_BASE: https://api.getpodcastplus.com

images:
  - '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_AR_REPO}/${_SERVICE}:latest'
  - '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_AR_REPO}/${_WEB_SERVICE}:latest'

steps:
  # ---------- API: build & push ----------
  - name: gcr.io/cloud-builders/docker
    args:
      [ 'build',
        '-t', '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_AR_REPO}/${_SERVICE}:latest',
        '.' ]

  - name: gcr.io/cloud-builders/docker
    args:
      [ 'push', '${_REGION}-docker.pkg.dev/$PROJECT_ID/${_AR_REPO}/${_SERVICE}:latest' ]

  # ---------- WEB: build & push (tar stream to ensure correct context) ----------
  - name: gcr.io/cloud-builders/docker
    id: web-build
    entrypoint: sh
    args:
      - -c
      - |
        set -eu
        WEB_DIR='frontend'
        IMG="${_REGION}-docker.pkg.dev/$PROJECT_ID/${_AR_REPO}/${_WEB_SERVICE}:latest"

        echo "==> Verifying context at $${WEB_DIR}"
        ls -la "$${WEB_DIR}"
        test -f "$${WEB_DIR}/package.json"
        du -sh "$${WEB_DIR}" || true

        echo "==> Building web image"
        tar -C "$${WEB_DIR}" -cf - . | \
          docker build \
            --build-arg VITE_GOOGLE_CLIENT_ID="${_VITE_GOOGLE_CLIENT_ID}" \
            --build-arg VITE_API_BASE="${_VITE_API_BASE}" \
            -t "$${IMG}" \
            -f Dockerfile \
            -

        docker push "$${IMG}"

  # ---------- API: deploy ----------
  - name: gcr.io/google.com/cloudsdktool/cloud-sdk:slim
    entrypoint: bash
    args:
      - -c
      - |
        set -euo pipefail
        CORS_ALLOWED='https://app.getpodcastplus.com;https://app.getpodcastpro.com;https://app.podcastpro.plus;https://getpodcastplus.com;https://www.getpodcastplus.com;https://getpodcastpro.com;https://www.getpodcastpro.com;https://podcastpro.plus;https://www.podcastpro.plus'
        gcloud run deploy ${_SERVICE} --image=${_REGION}-docker.pkg.dev/$PROJECT_ID/${_AR_REPO}/${_SERVICE}:latest --region=${_REGION} --platform=managed --remove-env-vars=SECRET_KEY,GOOGLE_CLIENT_ID,DATABASE_URL,SESSION_SECRET_KEY,GEMINI_API_KEY,ELEVENLABS_API_KEY,ASSEMBLYAI_API_KEY,SPREAKER_API_TOKEN,SPREAKER_CLIENT_ID,SPREAKER_CLIENT_SECRET,GOOGLE_CLIENT_SECRET,STRIPE_SECRET_KEY,STRIPE_WEBHOOK_SECRET,DB_USER,DB_PASS,DB_NAME --update-env-vars="ADMIN_EMAIL=scott@scottgerhardt.com,MEDIA_ROOT=${_MEDIA_ROOT},OAUTH_BACKEND_BASE=https://api.getpodcastplus.com,CORS_ALLOWED_ORIGINS=$$CORS_ALLOWED,INSTANCE_CONNECTION_NAME=podcast612:us-west1:podcast-db" --update-secrets=DB_USER=DB_USER:latest,DB_PASS=DB_PASS:latest,DB_NAME=DB_NAME:latest,SECRET_KEY=SECRET_KEY:latest,SESSION_SECRET_KEY=SESSION_SECRET:latest,GEMINI_API_KEY=GEMINI_API_KEY:latest,ELEVENLABS_API_KEY=ELEVENLABS_API_KEY:latest,ASSEMBLYAI_API_KEY=ASSEMBLYAI_API_KEY:latest,SPREAKER_API_TOKEN=SPREAKER_API_TOKEN:latest,SPREAKER_CLIENT_ID=SPREAKER_CLIENT_ID:latest,SPREAKER_CLIENT_SECRET=SPREAKER_CLIENT_SECRET:latest,GOOGLE_CLIENT_ID=GOOGLE_CLIENT_ID:latest,GOOGLE_CLIENT_SECRET=GOOGLE_CLIENT_SECRET:latest,STRIPE_SECRET_KEY=STRIPE_SECRET_KEY:latest,STRIPE_WEBHOOK_SECRET=STRIPE_WEBHOOK_SECRET:latest
  - name: gcr.io/google.com/cloudsdktool/cloud-sdk:slim
    entrypoint: gcloud
    args:
      [ 'run', 'deploy', '${_WEB_SERVICE}',
        '--image=${_REGION}-docker.pkg.dev/$PROJECT_ID/${_AR_REPO}/${_WEB_SERVICE}:latest',
        '--region=${_REGION}',
        '--platform=managed',
        '--allow-unauthenticated' ]
